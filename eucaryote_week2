## to install packages from bioconductor and load them
if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("ComplexHeatmap")


if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("dendextend")

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("phyloseq")

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("microbiome")

installed.packages("dplyr")

library(ComplexHeatmap)
library(dendextend)
library(dplyr)
library(phyloseq)
library(microbiome)

## otu with all 32 treatments

## loading of otu data into a data frame
filename <- "D:/HIWI/eukaryote_otu/shahadat_euK/eucaryotes_analysis/Week2/otu_all_treatment.txt"

my_data <- read.table(filename, sep = "\t", quote = "", stringsAsFactors = FALSE, header = TRUE)

head(my_data)

dim(my_data)

nrow(my_data)
ncol(my_data)

## to make heatmap into a matrix
my_matrix <- as.matrix(my_data[ ,c(2:33)])

## to check class
class(my_data)
class(my_matrix)

head(my_matrix)

## to save otu column for annotating the heatmap later
otu_info <- data.frame(otu = my_data$otu)
otu_info

## first heatmap
## default parameters
heatmap(my_matrix)

## flip rows and columns around
my_matrix <- t(my_matrix)
heatmap(my_matrix)

## to keep otu in order, not clustered
heatmap(my_matrix, cluster_columns=FALSE)

fontsize <- 0.6

## put cell labels into left side
heatmap(my_matrix, cluster_columns=FALSE,
        row_names_side = "left",
        row_hclust_side = "left",
        row_names_gp =gpar(cex=fontsize))

## make the dendogram wider
heatmap(my_matrix, cluster_columns=FALSE,
        row_names_side = "left",
        row_hclust_side = "left",
        row_names_gp =gpar(cex=fontsize),
        row_hclust_width = unit(3, "cm"))

## different distance calculation methods like euclidean, maximum etc..
##d different clustering methods like ward.D, ward.D2 etc....
## watch the dendogram and heatmap change when we change the methods
heatmap(my_matrix, cluster_columns=FALSE,
        row_names_side = "left",
        row_hclust_side = "left",
        row_names_gp =gpar(cex=fontsize),
        row_hclust_width = unit(3, "cm"),
        clustering_distance_rows = "maximum",
        clustering_method_rows = "ward.D")


## coloring clusters in dendogram
## calculate distances (methods ="maximum")
## cluster (method = "ward.D")
dend = hclust(dist(my_matrix, method = "maximum"), method="ward.D")

heatmap(my_matrix, cluster_columns=FALSE,
        row_names_side = "left",
        row_hclust_side = "left",
        row_names_gp =gpar(cex=fontsize),
        row_hclust_width = unit(3, "cm"),
        clustering_rows = color_branches(dend, k=3))

## split into clusters
heatmap(my_matrix, cluster_columns=FALSE,
        row_names_side = "left",
        row_hclust_side = "left",
        row_names_gp =gpar(cex=fontsize),
        row_hclust_width = unit(3, "cm"),
        clustering_distance_rows = "maximum",
        clustering_method_rows = "ward.D",
        km=2)

otu_info

## split columns of plot up into otu using extra_info
otu.colors <- c(rep(c("black", "white"), 11), "black")
otu.colors
names(otu.colors) <- paste("chr",c(seq(1,22),"X"),sep="")
otu.colors
heatmap(my_matrix, 
        cluster_columns=FALSE,
        row_names_side = "left",
        row_hclust_side = "left",
        row_names_gp =gpar(cex=fontsize),
        row_hclust_width = unit(3, "cm"),
        clustering_distance_rows = "maximum",
        clustering_method_rows = "ward.D",
        km=2,
        bottom_annotation = HeatmapAnnotation(otu_info=runif(10),col = list
                                              (otu=otu.colors),show_legend = FALSE)
        )


